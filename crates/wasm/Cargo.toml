[package]
name = "andromeda-wasm"
version = "0.1.0"
edition = "2021"

[lib]
doctest = false
crate-type = ["cdylib", "rlib"]

[dependencies]
andromeda-api = { path = "../api" }
andromeda-bitcoin = { path = "../bitcoin" }
andromeda-common = { version = "0.1.0", path = "../common" }
andromeda-esplora = { path = "../esplora" }

serde-wasm-bindgen = "0.6.1"
serde = { workspace = true }
serde_json = { workspace = true }

async-std = { workspace = true }

anyhow = { workspace = true }

wasm-bindgen = { version = "0.2.90", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.38"
js-sys = "0.3.65"
web-sys = { version = "0.3.65", features = ["console", "Storage", "Window"] }
tsify = "0.4.5"

console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
tokio = { workspace = true }
wasm-bindgen-test = "0.3.38"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
[features]
# On web, we need the `allow-dangerous-env` feature to be able to use the browser env and get the session from it.
default = ["console_error_panic_hook", "andromeda-api/allow-dangerous-env"]
