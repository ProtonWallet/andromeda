include:
  - file: image/oci-image.gitlab-ci.yml
    project: proton/devops/tooling/templates

variables:
  # Use fastzip to improve cache times
  FF_USE_FASTZIP: "true"
  OCI_REGISTRY_HOST: "$PROTON_GIT_URL"
  # OCI_REGISTRY_USERNAME: "$CI_REGISTRY_USER"
  # OCI_REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
  OCI_IMAGE_NAME: $PROTON_GIT_URL/proton/clients/wallet/proton-wallet-commo
  OCI_BUILD_CONTEXT: docker
  OCI_BUILD_DOCKERFILE: docker
  FF_KUBERNETES_HONOR_ENTRYPOINT: "true"

before_script:
  - export JAVA_TOOL_OPTIONS="-Dhttp.proxyHost=$( echo ${http_proxy##http://} | cut -d':' -f1 ) -Dhttp.proxyPort=$( echo ${http_proxy##http://} | cut -d':' -f2 ) -Dhttps.proxyHost=$( echo ${https_proxy##http://} | cut -d':' -f1 ) -Dhttps.proxyPort=$( echo ${https_proxy##http://} | cut -d':' -f2 ) -Dhttp.nonProxyHosts=\"$( echo $no_proxy | tr ',' '|' )\""
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - lint

image: $PROTON_GIT_URL/proton/clients/wallet/proton-wallet-common:latest

# #### Docker image
# docker:build:
#   stage: docker
#   extends: .oci-image-build
#   allow_failure: true # We need to mark it as failable in order not to prevent the pipeline from launching
#   tags:
#     - buildkit
#   # rules:
#   #   - if: $CI_PIPELINE_SOURCE == "web" # Do not execute if the pipeline is a manual one
#   #     when: never
#   #   - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
#   #     when: never
#   #   - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Do not run if it's a merge to the default branch, screenshots should already have been generated
#   #     when: never
#   #   - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run manual if it's a MR
#   #     when: manual
#   script:
#     - export OCI_IMAGE_TAGS="latest"
#     - !reference [.oci-image-build, script]

# #### Project
lint:fmt:
  stage: lint
  tags:
    - shared-small
  script:
    - cargo fmt --all --check

# lint:clippy:
#   stage: lint
#   tags:
#     - shared-small
#   # rules:
#   #   - if: $CI_PIPELINE_SOURCE == "web" # Do not execute if the pipeline is a manual one
#   #     when: never
#   #   - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
#   #     when: never
#   #   - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run if it's a merge to the default branch
#   #     when: on_success
#   #   - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run if it's a MR
#   #     when: on_success
#   script:
#     - cargo clippy --all --all-targets -- -D warnings

# # test:
# #   stage: test
# #   tags:
# #     - shared-small
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE == "web" # Do not execute if the pipeline is a manual one
# #       when: never
# #     - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
# #       when: never
# #     - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run if it's a merge to the default branch
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run if it's a MR
# #       when: on_success
# #   script:
# #     - make test

# # build:android:
# #   stage: build
# #   tags:
# #     - xlarge-k8s
# #   variables:
# #     FF_KUBERNETES_HONOR_ENTRYPOINT: "true"
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE == "web" # Execute if the pipeline is a manual one
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
# #       when: never
# #     - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run if it's a merge to the default branch
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run if it's a MR
# #       when: on_success
# #     - if: "$CI_COMMIT_TAG" # Run if it's a tag
# #       when: on_success
# #   script:
# #     - mkdir -p .cargo
# #     - cp ci/cargo/config.toml .cargo/config.toml
# #     - cp ci/gradle/gradle.properties proton-wallet-mobile/android/gradle.properties
# #     - make kotlin-bindings
# #     - make android
# #   artifacts:
# #     paths:
# #       - proton-wallet-mobile/android/**/*.aar
# #     expire_in: 2 days

# # build:ios:
# #   stage: build
# #   tags:
# #     - macstadium-id-team
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE == "web" # Execute if the pipeline is a manual one
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
# #       when: never
# #     - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run if it's a merge to the default branch
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run if it's a MR
# #       when: on_success
# #     - if: "$CI_COMMIT_TAG" # Run if it's a tag
# #       when: on_success
# #   script:
# #     - make ios-package
# #   artifacts:
# #     paths:
# #       - proton-wallet-mobile/iOS
# #     expire_in: 2 days

# # build:web:
# #   stage: build
# #   tags:
# #     - shared-small
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE == "web" # Execute if the pipeline is a manual one
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "schedule" # Do not execute if the pipeline is a scheduled one
# #       when: never
# #     - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Run if it's a merge to the default branch
# #       when: on_success
# #     - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run if it's a MR
# #       when: on_success
# #     - if: "$CI_COMMIT_TAG" # Run if it's a tag
# #       when: on_success
# #   script:
# #     - make web

# # #### Publish
# # publish:android:
# #   stage: publish
# #   tags:
# #     - xlarge-k8s
# #   rules:
# #     - if: "$CI_COMMIT_TAG"
# #       when: manual
# #       allow_failure: true
# #   script:
# #     - mkdir -p .cargo
# #     - cp ci/cargo/config.toml .cargo/config.toml
# #     - cp ci/gradle/gradle.properties proton-wallet-mobile/android/gradle.properties
# #     - make kotlin-bindings
# #     - make android

# #     - cd proton-wallet-mobile/android/
# #     - ./gradlew publishAllPublicationsToMavenCentralRepository
# #   needs:
# #     - build:android
# #   dependencies:
# #     - build:android

# # publish:ios:
# #   stage: publish
# #   tags:
# #     - shared-medium
# #   rules:
# #     - if: "$CI_COMMIT_TAG"
# #       when: manual
# #       allow_failure: true
# #   script:
# #     - ci/ios/ci-deps.sh
# #     - ci/ios/publish.sh "${CI_COMMIT_TAG}"
# #   dependencies:
# #     - build:ios
# #   needs:
# #     - build:ios

# # publish:web:
# #   stage: publish
# #   tags:
# #     - shared-medium
# #   rules:
# #     - if: "$CI_COMMIT_TAG"
# #       when: manual
# #       allow_failure: true
# #   script:
# #     - ci/web/publish.sh
# #   dependencies:
# #     - build:web
# #   needs:
# #     - build:web

# # publish:github:
# #   stage: publish
# #   tags:
# #     - shared-medium
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE == 'scheduled' # Do not execute if the pipeline is a scheduled one
# #       when: never
# #       allow_failure: true
# #     - if: "$CI_COMMIT_TAG" # Allow to run if is a tag
# #       when: manual
# #       allow_failure: true
# #     - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH" # Allow to run if is a merge to the main branch
# #       when: manual
# #       allow_failure: true
# #   dependencies: []
# #   script:
# #     - ci/github/publish-to-github.sh "${CI_COMMIT_TAG}"
